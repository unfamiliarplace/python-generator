'use strict';import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,__ipow__,
__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,filter,float,getattr,
hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import{Mixin_Renderable}from"./mixins.pg_mixin_renderable.js";import{Mixin_Generatable}from"./mixins.pg_mixin_generatable.js";import{FP}from"./formula.pg_formula_pattern.js";import{JS_Random as R}from"./util.js_random.js";var __name__="expressions.pg_variable";
export var Variable=__class__("Variable",[Mixin_Generatable,Mixin_Renderable],{__module__:__name__,type_to_names:dict({"integer":["n","m","n_students","n_doughnuts","count","total"],"string":["name","person","winner"],"float":["fraction","proportion"],"boolean":["is_valid","is_allowed","is_done","has_finished","has_loaded","exists"],"container":["names","ages","people","pizzas","values"],"misc":["x","y","z","a","b","c","value","key"],"index":["i","j","k"],"element":["item","elem","element","val",
"_"],"placeholder":["_"],"special":["__name__","__main__"]}),get __init__(){return __get__(this,function(self,py_metatype){if(typeof py_metatype=="undefined"||py_metatype!=null&&py_metatype.hasOwnProperty("__kwargtrans__"))var py_metatype="any";if(arguments.length){var __ilastarg0__=arguments.length-1;if(arguments[__ilastarg0__]&&arguments[__ilastarg0__].hasOwnProperty("__kwargtrans__")){var __allkwargs0__=arguments[__ilastarg0__--];for(var __attrib0__ in __allkwargs0__)switch(__attrib0__){case "self":var self=
__allkwargs0__[__attrib0__];break;case "py_metatype":var py_metatype=__allkwargs0__[__attrib0__];break}}}else;self.py_metatype=py_metatype;__super__(Variable,"__init__")(self)})},get get_patterns(){return __get__(this,function(self){if(arguments.length){var __ilastarg0__=arguments.length-1;if(arguments[__ilastarg0__]&&arguments[__ilastarg0__].hasOwnProperty("__kwargtrans__")){var __allkwargs0__=arguments[__ilastarg0__--];for(var __attrib0__ in __allkwargs0__)switch(__attrib0__){case "self":var self=
__allkwargs0__[__attrib0__];break}}}else;return["integer","string","float","boolean","container","misc","index","element","placeholder"]})},get generate(){return __get__(this,function(self){if(arguments.length){var __ilastarg0__=arguments.length-1;if(arguments[__ilastarg0__]&&arguments[__ilastarg0__].hasOwnProperty("__kwargtrans__")){var __allkwargs0__=arguments[__ilastarg0__--];for(var __attrib0__ in __allkwargs0__)switch(__attrib0__){case "self":var self=__allkwargs0__[__attrib0__];break}}}else;
var type_=self.py_metatype!="any"?self.py_metatype:__super__(Variable,"generate")(self);var py_name=R.choose_from(self.type_to_names[type_]);if(R.flip_coin(.1))return py_name.upper();else return py_name})}});

//# sourceMappingURL=expressions.pg_variable.map